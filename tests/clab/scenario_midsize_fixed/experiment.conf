# BEWARE: this config is sourced by bash, shell syntax rules apply!

NAME=midsize-fixed

# animated scenarios must have the link to the mobility model to a file in /shared
# autostart should be enabled for the movement
# node mapping must fit the scenario
# movements can be generated using bonnmotion
SCENARIO=midsize-fixed.xml

GUI=0

MONITOR_PIDSTAT=0
# monitor specific process name (default, all on node -> no graph plotting!)
MONITOR_PIDSTAT_PARAMS="dtnd"

MONITOR_NET=0
# interface to monitor (default: all interfaces up)
MONITOR_NET_PARAMS="eth0"

MONITOR_XY=1
# Delay in seconds between recordings
#MONITOR_XY_PARAMS="5"

MONITOR_CONTACTS=1
# Delay in seconds between recordings
#MONITOR_CONTACTS_PARAMS="5"

# commands to execute at beginning of simulation
#START_EXEC=("echo started > started.log" "echo second > second.log")

# commands to daemonize at beginning of simulation, e.g., dtnd
START_DAEMONIZED=('dtnd -C tcp -n $(hostname) -j 3s -i 2s -p 5s -d' 'rnd_sender')

# usually commands started at the beginning of the simulation are put here for shutdown
SHUTDOWN_PROCS="dtnd rnd_sender"

# let simulation warm up for a period of time if needed
#WARMUP=5

# run simulation for this long
# without RUNTIME simulation will run until a shutdown.txt is found in the shared volume
RUNTIME=60

#COLLECT_EVERYTHING=1

# Called right after initializing the simulation, prior to any monitoring or START_EXEC/START_DAEMONIZED
pre() {
    echo "pre hook - results in $1"
    cp /shared/bin/* /usr/local/bin
    cp /shared/rnd_sender /usr/local/bin
}

# Called right after starting monitoring and/or START_EXEC/START_DAEMONIZED
start() {
    echo "Started"
}

# Called after simulation time is over but prior to collecting logs
post() {
    echo "post hook - results in $1"
}

# Called after logs have been collected from all nodes
analyze() {
    echo "analyze hook - results in $1"
    # collect number of sent messages and received messages
    SENT=$(rg "Result: Sent " $1/*/nohup.rnd_sender.*.log | wc -l)
    RECEIVED=$(rg "Received new bundle:" $1/*/nohup.dtnd.*.log | wc -l)

    ENDTIME=$(cat $1/stop.txt)
    SUCCESS=1
    for i in $1/*/nohup.dtnd.*.log
    do 
        LAST_MSG=$(cat $i | grep "Received new bundle" | tail -n1 | awk '{print $1}')
        LAST_TS=$(date --date="$LAST_MSG" +"%s")
        echo "$ENDTIME $LAST_TS $(( $ENDTIME - $LAST_TS ))"
        if [ $(( $ENDTIME - $LAST_TS )) -gt "10" ]
        then
            NODE_NUM=$(echo $i | rg -o "/n\d+/" | tr -d '/')
            echo "Node $NODE_NUM did not receive a bundle for $(( $ENDTIME - $LAST_TS )) seconds!"
            SUCCESS=0
        fi

    done

    if [ $SUCCESS -eq 1 ] ; then
        echo "EXPERIMENT RESULT: Success | tx: $SENT, rx: $RECEIVED"
    else 
        echo "EXPERIMENT RESULT: Failed | tx: $SENT, rx: $RECEIVED"
    fi
}