name: Continuous Deployment

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-18.04
    outputs:
      release_body: ${{ steps.release.outputs.release_body }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="$(printf "$r" | tail -n +3)"
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=release_body::$r"
  publish-github:
    name: Publish on GitHub
    needs: generate-changelog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux-gnu, linux-musl, linux-arm-v7-gnu, macos]
        include:
          - BUILD: linux-gnu
            OS: ubuntu-18.04
            TOOLCHAIN: 1.54.0
            TARGET: x86_64-unknown-linux-gnu
          - BUILD: linux-musl
            OS: ubuntu-18.04
            TOOLCHAIN: 1.54.0
            TARGET: x86_64-unknown-linux-musl
            MUSL: true
          - BUILD: macos
            OS: macos-10.15
            TOOLCHAIN: 1.54.0
            TARGET: x86_64-apple-darwin
          - BUILD: linux-arm-v7-gnu
            OS: ubuntu-18.04
            TOOLCHAIN: 1.54.0
            TARGET: armv7-unknown-linux-gnueabihf
            LINKER: gcc-arm-linux-gnueabihf
            CROSS: true
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Install musl-tools
        if: matrix.MUSL
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            --allow-unauthenticated musl-tools
      - name: Install linker
        if: matrix.CROSS
        run: |
          sudo apt-get update 
          sudo apt-get install -y --allow-unauthenticated ${{ matrix.LINKER }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.TOOLCHAIN }}
          target: ${{ matrix.TARGET }}
          override: true
      - name: Build
        run: cargo build --release --target ${{ matrix.TARGET }} --bins --examples
      - name: Prepare release assets
        shell: bash
        run: |
          mkdir -p release/examples
          mkdir -p release/bin                   
          cp {LICENSE*,COPYRIGHT,README.md,CHANGELOG.md} release/
          cp -r doc release/doc          
          cp target/${{ matrix.TARGET }}/release/{dtnd,dtnsend,dtnrecv,dtnquery,dtntrigger} release/bin
          mv release/ dtn7-${{ env.RELEASE_VERSION }}/
      - name: Create release artifacts
        shell: bash
        run: |          
          tar -czvf dtn7-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz \
            dtn7-${{ env.RELEASE_VERSION }}/
          shasum -a 512 dtn7-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz \
            > dtn7-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}.tar.gz.sha512
                
      - name: Upload the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dtn7-${{ env.RELEASE_VERSION }}-${{ matrix.TARGET }}*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          release_name: "Release v${{ env.RELEASE_VERSION }}"
          body: "${{ needs.generate-changelog.outputs.release_body }}"
